<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: technology, | Working thoughts]]></title>
  <link href="http://lplotni.github.io/blog/categories/technology/atom.xml" rel="self"/>
  <link href="http://lplotni.github.io/"/>
  <updated>2015-07-18T17:10:05+02:00</updated>
  <id>http://lplotni.github.io/</id>
  <author>
    <name><![CDATA[Lukasz Plotnicki]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Burstah, a build monitor]]></title>
    <link href="http://lplotni.github.io/blog/2015/06/27/build-monitors/"/>
    <updated>2015-06-27T15:41:00+02:00</updated>
    <id>http://lplotni.github.io/blog/2015/06/27/build-monitors</id>
    <content type="html"><![CDATA[<p>During my last four projects or so, the teams I worked with were always using <a href="http://www.go.cd/">GO.CD</a> as the CD tool of their
choosing. Although the pipeline state visualisation GO.CD comes with is quite nice, it still doesn&rsquo;t cut it as a proper,
<em>obvious</em> build monitor enabling everybody in the team to quickly recognize what is the pipeline status.</p>

<p><img class="left" src="/images/burstah_example.png" title="Burstah in action" ></p>

<p>Therefore first <a href="https://github.com/lplotni/cidar">cidar</a>, a simple sinatra based build monitor, has been born. I quickly discovered
that sinatra and especially the nokogiri dependency, doesn&rsquo;t make it easy to use e.g. a Raspberry Pi as the monitor hardware. So,
having the liberty, I decided to re-implement everything in JavaScript using node.js &amp; express. <a href="https://github.com/lplotni/burstah">Burstah</a>
, my second attempt at the ultimative build monitor, has been born  <img alt="bowtie" src="/images/emoji/bowtie.png" class="emoji" /></p>

<!--more-->


<p>All the necessary information how to use, install or contribute can be found in <strong>Burstah</strong>&rsquo;s readme.</p>

<p>Currently <strong>Burstah</strong> has following features:</p>

<ul>
<li>Polling for the cctray.xml to recognize the pipelines and their status</li>
<li>Grabbing the commit details directly out of the GO.CD and presenting them</li>
<li>Providing an animation when the build is running</li>
<li>Supporting emojis in the commit messages <img alt="thumbsup" src="/images/emoji/unicode/1f44d.png" class="emoji" /></li>
</ul>


<p>If you have any wishes or issues, just write stuff down on the <a href="https://github.com/lplotni/burstah/issues">github issues page</a>.</p>
]]></content>
  </entry>
  
</feed>
